*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVSA0104........................................*
FORM GET_DATA_ZVSA0104.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA0102 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA0104 .
ZVSA0104-MANDT =
ZTSA0102-MANDT .
ZVSA0104-EDEPT =
ZTSA0102-EDEPT .
ZVSA0104-PHONE =
ZTSA0102-PHONE .
ZVSA0104-BUDGET =
ZTSA0102-BUDGET .
ZVSA0104-WAERS =
ZTSA0102-WAERS .
    SELECT SINGLE * FROM ZTSA0102_T WHERE
EDEPT = ZTSA0102-EDEPT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA0104-DTEXT =
ZTSA0102_T-DTEXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA0104.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA0104 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA0104.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA0104-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0102 WHERE
  EDEPT = ZVSA0104-EDEPT .
    IF SY-SUBRC = 0.
    DELETE ZTSA0102 .
    ENDIF.
    DELETE FROM ZTSA0102_T WHERE
    EDEPT = ZTSA0102-EDEPT .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0102 WHERE
  EDEPT = ZVSA0104-EDEPT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA0102.
    ENDIF.
ZTSA0102-MANDT =
ZVSA0104-MANDT .
ZTSA0102-EDEPT =
ZVSA0104-EDEPT .
ZTSA0102-PHONE =
ZVSA0104-PHONE .
ZTSA0102-BUDGET =
ZVSA0104-BUDGET .
ZTSA0102-WAERS =
ZVSA0104-WAERS .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0102 ##WARN_OK.
    ELSE.
    INSERT ZTSA0102 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA0102_T WHERE
    EDEPT = ZTSA0102-EDEPT AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA0102_T.
ZTSA0102_T-EDEPT =
ZTSA0102-EDEPT .
ZTSA0102_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA0102_T-DTEXT =
ZVSA0104-DTEXT .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0102_T ##WARN_OK.
    ELSE.
    INSERT ZTSA0102_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA0104-UPD_FLAG,
STATUS_ZVSA0104-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA0104.
  SELECT SINGLE * FROM ZTSA0102 WHERE
EDEPT = ZVSA0104-EDEPT .
ZVSA0104-MANDT =
ZTSA0102-MANDT .
ZVSA0104-EDEPT =
ZTSA0102-EDEPT .
ZVSA0104-PHONE =
ZTSA0102-PHONE .
ZVSA0104-BUDGET =
ZTSA0102-BUDGET .
ZVSA0104-WAERS =
ZTSA0102-WAERS .
    SELECT SINGLE * FROM ZTSA0102_T WHERE
EDEPT = ZTSA0102-EDEPT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA0104-DTEXT =
ZTSA0102_T-DTEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA0104-DTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA0104 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA0104-EDEPT TO
ZTSA0102-EDEPT .
MOVE ZVSA0104-MANDT TO
ZTSA0102-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0102'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0102 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0102'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA0102-EDEPT TO
ZTSA0102_T-EDEPT .
MOVE SY-LANGU TO
ZTSA0102_T-SPRAS .
MOVE ZVSA0104-MANDT TO
ZTSA0102_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0102_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0102_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0102_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA0199........................................*
FORM GET_DATA_ZVSA0199.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA0199 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA0199 .
ZVSA0199-MANDT =
ZTSA0199-MANDT .
ZVSA0199-LIFNR =
ZTSA0199-LIFNR .
ZVSA0199-LAND1 =
ZTSA0199-LAND1 .
ZVSA0199-NAME1 =
ZTSA0199-NAME1 .
ZVSA0199-NAME2 =
ZTSA0199-NAME2 .
ZVSA0199-VENCA =
ZTSA0199-VENCA .
ZVSA0199-CARRID =
ZTSA0199-CARRID .
ZVSA0199-MEALNUMBER =
ZTSA0199-MEALNUMBER .
ZVSA0199-PRICE =
ZTSA0199-PRICE .
ZVSA0199-WAERS =
ZTSA0199-WAERS .
<VIM_TOTAL_STRUC> = ZVSA0199.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA0199 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA0199.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA0199-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0199 WHERE
  LIFNR = ZVSA0199-LIFNR .
    IF SY-SUBRC = 0.
    DELETE ZTSA0199 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0199 WHERE
  LIFNR = ZVSA0199-LIFNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA0199.
    ENDIF.
ZTSA0199-MANDT =
ZVSA0199-MANDT .
ZTSA0199-LIFNR =
ZVSA0199-LIFNR .
ZTSA0199-LAND1 =
ZVSA0199-LAND1 .
ZTSA0199-NAME1 =
ZVSA0199-NAME1 .
ZTSA0199-NAME2 =
ZVSA0199-NAME2 .
ZTSA0199-VENCA =
ZVSA0199-VENCA .
ZTSA0199-CARRID =
ZVSA0199-CARRID .
ZTSA0199-MEALNUMBER =
ZVSA0199-MEALNUMBER .
ZTSA0199-PRICE =
ZVSA0199-PRICE .
ZTSA0199-WAERS =
ZVSA0199-WAERS .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0199 ##WARN_OK.
    ELSE.
    INSERT ZTSA0199 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA0199-UPD_FLAG,
STATUS_ZVSA0199-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA0199.
  SELECT SINGLE * FROM ZTSA0199 WHERE
LIFNR = ZVSA0199-LIFNR .
ZVSA0199-MANDT =
ZTSA0199-MANDT .
ZVSA0199-LIFNR =
ZTSA0199-LIFNR .
ZVSA0199-LAND1 =
ZTSA0199-LAND1 .
ZVSA0199-NAME1 =
ZTSA0199-NAME1 .
ZVSA0199-NAME2 =
ZTSA0199-NAME2 .
ZVSA0199-VENCA =
ZTSA0199-VENCA .
ZVSA0199-CARRID =
ZTSA0199-CARRID .
ZVSA0199-MEALNUMBER =
ZTSA0199-MEALNUMBER .
ZVSA0199-PRICE =
ZTSA0199-PRICE .
ZVSA0199-WAERS =
ZTSA0199-WAERS .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA0199 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA0199-LIFNR TO
ZTSA0199-LIFNR .
MOVE ZVSA0199-MANDT TO
ZTSA0199-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0199'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0199 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0199'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA01PRO.......................................*
FORM GET_DATA_ZVSA01PRO.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA01PRO WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA01PRO .
ZVSA01PRO-MANDT =
ZTSA01PRO-MANDT .
ZVSA01PRO-PROID =
ZTSA01PRO-PROID .
ZVSA01PRO-PROTY =
ZTSA01PRO-PROTY .
ZVSA01PRO-BUDGET =
ZTSA01PRO-BUDGET .
ZVSA01PRO-WAERS =
ZTSA01PRO-WAERS .
ZVSA01PRO-PERNR =
ZTSA01PRO-PERNR .
    SELECT SINGLE * FROM ZTSA01PRO_T WHERE
PROID = ZTSA01PRO-PROID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA01PRO-TTEXT =
ZTSA01PRO_T-TTEXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA01PRO.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA01PRO .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA01PRO.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA01PRO-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA01PRO WHERE
  PROID = ZVSA01PRO-PROID .
    IF SY-SUBRC = 0.
    DELETE ZTSA01PRO .
    ENDIF.
    DELETE FROM ZTSA01PRO_T WHERE
    PROID = ZTSA01PRO-PROID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA01PRO WHERE
  PROID = ZVSA01PRO-PROID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA01PRO.
    ENDIF.
ZTSA01PRO-MANDT =
ZVSA01PRO-MANDT .
ZTSA01PRO-PROID =
ZVSA01PRO-PROID .
ZTSA01PRO-PROTY =
ZVSA01PRO-PROTY .
ZTSA01PRO-BUDGET =
ZVSA01PRO-BUDGET .
ZTSA01PRO-WAERS =
ZVSA01PRO-WAERS .
ZTSA01PRO-PERNR =
ZVSA01PRO-PERNR .
    IF SY-SUBRC = 0.
    UPDATE ZTSA01PRO ##WARN_OK.
    ELSE.
    INSERT ZTSA01PRO .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA01PRO_T WHERE
    PROID = ZTSA01PRO-PROID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA01PRO_T.
ZTSA01PRO_T-PROID =
ZTSA01PRO-PROID .
ZTSA01PRO_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA01PRO_T-TTEXT =
ZVSA01PRO-TTEXT .
    IF SY-SUBRC = 0.
    UPDATE ZTSA01PRO_T ##WARN_OK.
    ELSE.
    INSERT ZTSA01PRO_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA01PRO-UPD_FLAG,
STATUS_ZVSA01PRO-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA01PRO.
  SELECT SINGLE * FROM ZTSA01PRO WHERE
PROID = ZVSA01PRO-PROID .
ZVSA01PRO-MANDT =
ZTSA01PRO-MANDT .
ZVSA01PRO-PROID =
ZTSA01PRO-PROID .
ZVSA01PRO-PROTY =
ZTSA01PRO-PROTY .
ZVSA01PRO-BUDGET =
ZTSA01PRO-BUDGET .
ZVSA01PRO-WAERS =
ZTSA01PRO-WAERS .
ZVSA01PRO-PERNR =
ZTSA01PRO-PERNR .
    SELECT SINGLE * FROM ZTSA01PRO_T WHERE
PROID = ZTSA01PRO-PROID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA01PRO-TTEXT =
ZTSA01PRO_T-TTEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA01PRO-TTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA01PRO USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA01PRO-PROID TO
ZTSA01PRO-PROID .
MOVE ZVSA01PRO-MANDT TO
ZTSA01PRO-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA01PRO'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA01PRO TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA01PRO'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA01PRO-PROID TO
ZTSA01PRO_T-PROID .
MOVE SY-LANGU TO
ZTSA01PRO_T-SPRAS .
MOVE ZVSA01PRO-MANDT TO
ZTSA01PRO_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA01PRO_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA01PRO_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA01PRO_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
